#spring.application.name=safestock

spring.datasource.url=jdbc:h2:mem:safestockdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=MySQL;DATABASE_TO_LOWER=TRUE;CASE_INSENSITIVE_IDENTIFIERS=TRUE
spring.datasource.driverClassName=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.defer-datasource-initialization=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Configuracoes de encoding UTF-8
spring.datasource.hikari.connection-test-query=SELECT 1
spring.jpa.properties.hibernate.connection.CharSet=utf8
spring.jpa.properties.hibernate.connection.characterEncoding=utf8
spring.jpa.properties.hibernate.connection.useUnicode=true

# Configuracao para executar scripts SQL automaticamente no H2
spring.sql.init.mode=always
spring.sql.init.data-locations=classpath:data.sql
spring.sql.init.continue-on-error=true
spring.sql.init.encoding=UTF-8
server.error.include-message=always
server.error.include-binding-errors=always

# Define o servidor SMTP que sera usado para enviar os e-mails. No caso, smtp.gmail.com e o servidor do Gmail.
spring.mail.host=smtp.gmail.com
# E a porta padrao para SMTP com STARTTLS (envio seguro de e-mail).
spring.mail.port=587
# O e-mail que sera usado (quem envia).
#spring.mail.username=gui.brito23@gmail.com
# A senha do e-mail ou a senha de app password (caso o Gmail bloqueie acessos externos comuns).
#spring.mail.password=byuyvglgrgglfcfp
# Define se a autenticacao e necessaria para o envio. Se true, o SMTP exige login e senha.
spring.mail.properties.mail.smtp.auth=true
# Ativa o STARTTLS, que e um protocolo para criptografar a conexao SMTP. Se true, melhora a seguranca no envio dos e-mails.
spring.mail.properties.mail.smtp.starttls.enable=true
# o envio de e-mail exige o uso do STARTTLS, que e uma forma de seguranca para a conexao SMTP.
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.protocol=smtp
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# tempo de expiracao do token em milissegundos (esse valor indica que ele vai expirar em 1 hora)
jwt.validity=3600000

# palavra passe do token (segredo) necessita de no minimo 32 caracteres e serve para assinar e verificar os tokens, sendo recomendavel usar uma chave complexa e dificil de advinhar para aumentar a seguranca da aplicacao
jwt.secret=RXhpc3RlIHVtYSB0ZW9yaWEgcXVlIGRpeiBxdWUsIHNlIHVtIGRpYSBhbGd16W0gZGVzY29icmlyIGV4YXRhbWVudGUgcGFyYSBxdWUgc2VydmUgbyBVbml2ZXJzbyBlIHBvciBxdWUgZWxlIGVzdOEgYXF1aSwgZWxlIGRlc2FwYXJlY2Vy4SBpbnN0YW50YW5lYW1lbnRlIGUgc2Vy4SBzdWJzdGl0de1kbyBwb3IgYWxnbyBhaW5kYSBtYWlzIGVzdHJhbmhvIGUgaW5leHBsaWPhdmVsLiBFeGlzdGUgdW1hIHNlZ3VuZGEgdGVvcmlhIHF1ZSBkaXogcXVlIGlzc28gauEgYWNvbnRlY2V1Li4u









































